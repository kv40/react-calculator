{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS\\\\kyles_calculator\\\\src\\\\layout\\\\Calculator\\\\Calculator.js\";\nimport React from 'react';\nimport Screen from './Screen/Screen';\nimport Keypad from './Keypad/Keypad';\n\nclass calculator extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      equation: '',\n      result: 0\n    };\n\n    this.onButtonPress = event => {\n      let equation = this.state.equation;\n      const pressedButton = event.target.innerHTML;\n      if (pressedButton === 'C') return this.clear();else if (pressedButton >= '0' && pressedButton <= '9' || pressedButton == '.') equation += pressedButton;else if (['+', '-', '*', '/', '%'].indexOf(pressedButton) !== -1) equation += ' ' + pressedButton + ' ';else if (pressedButton == '=') {\n        try {\n          const evalResult = eval(equation);\n          const result = Number.isInteger(evalResult) ? evalResult : evalResult.toFixed(2);\n          this.setState({\n            result\n          });\n        } catch (error) {\n          alert('Invalid Mathematical Equation');\n        }\n      } else {\n        equation = equation.trim();\n        equation = equation.substr(0, equation.length - 1);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"main\", {\n      className: \"calculator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Screen, {\n      equation: this.state.equation,\n      result: this.state.result,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Keypad, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default calculator;","map":{"version":3,"sources":["D:/VS/kyles_calculator/src/layout/Calculator/Calculator.js"],"names":["React","Screen","Keypad","calculator","Component","state","equation","result","onButtonPress","event","pressedButton","target","innerHTML","clear","indexOf","evalResult","eval","Number","isInteger","toFixed","setState","error","alert","trim","substr","length","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KAD6B;;AAAA,SAMrCC,aANqC,GAMrBC,KAAK,IAAI;AACrB,UAAIH,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA1B;AACA,YAAMI,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAaC,SAAnC;AACA,UAAGF,aAAa,KAAK,GAArB,EACI,OAAO,KAAKG,KAAL,EAAP,CADJ,KAEK,IAAIH,aAAa,IAAI,GAAjB,IAAwBA,aAAa,IAAI,GAA1C,IAAkDA,aAAa,IAAI,GAAtE,EACDJ,QAAQ,IAAII,aAAZ,CADC,KAEA,IAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0BI,OAA1B,CAAkCJ,aAAlC,MAAqD,CAAC,CAAzD,EACDJ,QAAQ,IAAI,MAAMI,aAAN,GAAsB,GAAlC,CADC,KAEA,IAAGA,aAAa,IAAI,GAApB,EAAyB;AAC1B,YAAI;AACA,gBAAMK,UAAU,GAAGC,IAAI,CAACV,QAAD,CAAvB;AACA,gBAAMC,MAAM,GAAGU,MAAM,CAACC,SAAP,CAAiBH,UAAjB,IAA8BA,UAA9B,GAA2CA,UAAU,CAACI,OAAX,CAAmB,CAAnB,CAA1D;AACA,eAAKC,QAAL,CAAc;AAACb,YAAAA;AAAD,WAAd;AACH,SAJD,CAIE,OAAMc,KAAN,EAAa;AACXC,UAAAA,KAAK,CAAC,+BAAD,CAAL;AACH;AACJ,OARI,MASA;AACDhB,QAAAA,QAAQ,GAAGA,QAAQ,CAACiB,IAAT,EAAX;AACAjB,QAAAA,QAAQ,GAAGA,QAAQ,CAACkB,MAAT,CAAgB,CAAhB,EAAmBlB,QAAQ,CAACmB,MAAT,GAAgB,CAAnC,CAAX;AACH;AACJ,KA5BoC;AAAA;;AA8BrCC,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWC,QAA7B;AAAuC,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AArCoC;;AAwCzC,eAAeJ,UAAf","sourcesContent":["import React from 'react';\r\nimport Screen from './Screen/Screen';\r\nimport Keypad from './Keypad/Keypad';\r\n\r\nclass calculator extends React.Component {\r\n    state = {\r\n        equation: '',\r\n        result: 0\r\n    }\r\n\r\n    onButtonPress = event => {\r\n        let equation = this.state.equation;\r\n        const pressedButton = event.target.innerHTML;\r\n        if(pressedButton === 'C')\r\n            return this.clear();\r\n        else if((pressedButton >= '0' && pressedButton <= '9') || pressedButton == '.')\r\n            equation += pressedButton;\r\n        else if(['+', '-', '*', '/', '%'].indexOf(pressedButton) !== -1)\r\n            equation += ' ' + pressedButton + ' ';\r\n        else if(pressedButton == '=') {\r\n            try {\r\n                const evalResult = eval(equation);\r\n                const result = Number.isInteger(evalResult)? evalResult : evalResult.toFixed(2);\r\n                this.setState({result});\r\n            } catch(error) {\r\n                alert('Invalid Mathematical Equation');\r\n            }\r\n        }\r\n        else {\r\n            equation = equation.trim();\r\n            equation = equation.substr(0, equation.length-1)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main className=\"calculator\">\r\n                <Screen equation={this.state.equation} result={this.state.result}/>\r\n                <Keypad />\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default calculator;"]},"metadata":{},"sourceType":"module"}